{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "containerName": {
      "defaultValue": "my-container",
      "type": "string",
      "metadata": {
        "description": "Name of the container resource in Azure"
      }
    },
    "containerMem": {
      "defaultValue": 1.0,
      "type": "string",
      "metadata": {
        "description": "Requested memory for container instance"
      }
    },
    "containerCpu": {
      "defaultValue": 1.0,
      "type": "string",
      "metadata": {
        "description": "Requested CPU cores for container instance"
      }
    },        
    "port": {
      "defaultValue": "80",
      "type": "string",
      "metadata": {
        "description": "Port the container exposes and is listening on"
      }
    },
    "image": {
      "defaultValue": "microsoft/aci-helloworld",
      "type": "string",
      "metadata": {
        "description": "Reference to Docker repo, image & tag in standard notation"
      }
    },
    "volumeShareName": {
      "defaultValue": "acishare",
      "type": "string",
      "metadata": {
        "description": "Name used for *BOTH* the Docker volume and the share in Azure Files"
      }
    },
    "volumeMountPath": {
      "defaultValue": "/mnt/foo",
      "type": "string",
      "metadata": {
        "description": "Mount point for volume in container"
      }
    },   
    "storageAcctName": {
      "defaultValue": "/mnt/foo",
      "type": "string",
      "metadata": {
        "description": "Storage account name which will hold the share and volumes"
      }
    },
    "envVars": {
      "defaultValue": [],
      "type": "array",
      "metadata": {
        "description": "Any environmental vars to pass to container"
      }
    }
  },
  "variables": {
  },
  "resources": [
    {
      "name": "[parameters('containerName')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-04-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "containers": [
          {
            "name": "[parameters('containerName')]",
            "properties": {
              "image": "[parameters('image')]",
              "ports": [
                {
                  "port": "[parameters('port')]"
                }
              ],
              "volumeMounts": [{
                "name": "[parameters('volumeShareName')]",
                "mountPath": "[parameters('volumeMountPath')]"
              }],
              "environmentVariables": "[parameters('envVars')]",
              "resources": {
                "requests": {
                  "cpu": "[parameters('containerCpu')]",
                  "memoryInGB": "[parameters('containerMem')]"
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "ipAddress": {
          "type": "Public",
          "ports": [
            {
              "protocol": "TCP",
              "port": "[parameters('port')]"
            }
          ]
        },
        "volumes": [{
          "name": "[parameters('volumeShareName')]",
          "azureFile": {
            "shareName": "[parameters('volumeShareName')]",
            "storageAccountName": "[parameters('storageAcctName')]",
            "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName')),'2016-01-01').keys[0].value]"
          }
        }]
      }
    }
  ],
  "outputs": {
    "newContainerURL": {
      "value": "[concat('http://', reference(parameters('containerName')).ipAddress.ip, ':', reference(parameters('containerName')).ipAddress.ports[0].port)]",
      "type": "string"
    },
    "newContainerState": {
      "value": "[reference(parameters('containerName')).state]",
      "type": "string"
    }
  }
}